#!/bin/sh /etc/rc.common
#


# External server to check by ping:
IPPING='8.8.8.8'

START=99
STOP=99

FINDIFNAME() {
        local N
        for N in $(uci show network | sed -nr 's:network\.(@?[a-zA-Z@0-9_]+\[?\d*\]?)\..*:\1:p'|sort -u); do
                if [ "$(uci get network.${N}.proto 2>/dev/null)" == "ncm" ]; then
                        IFNAME=${N}
                        DEVICE=$(uci get network.${IFNAME}.device 2>/dev/null)
                        APN=$(uci get network.${IFNAME}.apn 2>/dev/null)
                        APNUSER=$(uci get network.${IFNAME}.username 2>/dev/null)
                        APNPASS=$(uci get network.${IFNAME}.password 2>/dev/null)
                        IFMODE=$(uci get network.${IFNAME}.mode 2>/dev/null)
                        if [ -z ${APNPASS} ] || [ -z ${APNUSER} ] || [ -z ${APN} ] || [ -z ${DEVICE} ]; then
                                logger -t "ncm-fix[$$]" -p err "Aborted. Interface ${IFNAME} has some empty setting (device, apn, apn username, apn password or mode)"
                                exit 1
                        fi
                        [ -z $IFMODE ] && IFMODE=oem
                        break
                fi
        done

        if [ -z ${IFNAME} ]; then
                logger -t "ncm-fix[$$]" -p err "Aborted. An interface using ncm protocol wasn't found in /etc/config/network."
                exit 1
        fi

        if [ ! -e ${DEVICE} ]; then
                logger -t "ncm-fix[$$]" -p err "Aborted. No such device ${DEVICE}"
                exit 1
        fi
        return 0
}

PPING() {
        local PP=0
        let PP=$(ping -c 10 ${IPPING} 2>/dev/null | sed -nr 's/.*transmitted, +([0-9]+).*/\1/p')+0
        echo $PP
}


SENDAT() {
        local N
        local COMMAND=$1
        local DEVICE=$2
        local ANSWER
        [ $# -lt 2 ] && logger -t "ncm-fix[$$]" -p err "Wrong arguments for the function SENDAT"; return 1
        [ ! -e ${DEVICE} ] && logger -t "ncm-fix[$$]" -p err "Aborted. No such device ${DEVICE}"; exit 1
        for N in 1 2 ; do
                nice -n 19 timeout 3s echo -ne "${COMMAND}\r\n" > ${DEVICE} &
                ANSWER=$(nice -n -2 timeout 2s cat ${DEVICE})
                [ "$(echo $ANSWER | sed -n "/OK/{p;q}")" == "OK" ] & return 0
        done
        logger -t "ncm-fix[$$]" -p err "Command ${COMMAND} sent to ${DEVICE} didn't return an OK as response"
        return 1
}

BOOTNCM() {     # Arg: [empty] - Restart device and interface
                # Arg: stop - Stop device and interface

        # Finding the first interface that use ncm as protocol in /etc/config/network
        FINDIFNAME
        logger -t "ncm-fix[$$]" -p info "Turning interface ${IFNAME} down. Starting to sending  AT commands to ${DEVICE}"

        if [ "$(ifstatus ${IFNAME} 2>/dev/null | sed  -nr 's/.*\"up\": (true),/\1/p')" == "true" ]; then
                [ -n "$(ifdown ${IFNAME} 2>/dev/null)" ] && logger -t "ncm-fix[$$]" -p warning "Turning interface ${INTERFACE} down failed"
                sleep 1
        fi

        SENDAT "ATZ" ${DEVICE}
        SENDAT "AT^NDISDUP=1,0" ${DEVICE}


        if [ "$#" -ge 1 ] && [ "$1" -ne "stop" ]; then
                SENDAT "AT^NDISDUP=1,1,\"${APN}\",\"${APNUSER}\",\"${APNPASS}\"" ${DEVICE}
                local ATMODE
                case ${IFMODE} in
                        lte )
                                ATMODE="03"
                        ;;
                        umts )
                                ATMODE="02"
                        ;;
                        gsm )
                                ATMODE="01"
                        ;;
                        preferlte )
                                ATMODE="030201"
                        ;;
                        preferumts )
                                ATMODE="0201"
                        ;;
                        auto )
                                ATMODE="00"
                        ;;
                esac
                [ ${IFMODE} -ne "oem" ] && SENDAT "AT^SYSCFGEX=\"${ATMODE}\",3fffffff,1,3,7fffffffffffffff,," ${DEVICE}
                logger -t "ncm-fix[$$]" -p info "AT commands ended. Turning interface ${IFNAME} up"
                [ -n "$(ifup ${IFNAME} 2>/dev/null)" ] && logger -t "ncm-fix[$$]" -p warning "Turning interface ${INTERFACE} up failed"
        fi

}

CRONTAB() {
        if [ -e /etc/rc.d/S99ncm-fix ]; then
                if [ ! -f /etc/crontabs/root ] || [ -z "$(sed -n "/\/etc\/init.d\/ncm-fix/p" /etc/crontabs/root)" ]; then
                        echo "*/20      *       *       *       *       /etc/init.d/ncm-fix start" >> /etc/crontabs/root
                        /etc/init.d/cron stop
                        /etc/init.d/cron start
                fi
        else
                echo "$(sed "/\/etc\/init.d\/ncm-fix/d" /etc/crontabs/root)" >| /etc/crontabs/root
        fi
}


start() {

        local P=$(PPING)

        logger -t "ncm-fix[$$]" -p debug "Ping had ${P}0% of success"

        if [ ${P} -eq 0 ]; then
                logger -t "ncm-fix[$$]" -p warning "${IPPING} couldn't be pinged. Restarting ncm device"
                BOOTNCM
                local N=0
                while [ ${N} -lt 10 ]; do
                        sleep 3
                        P=$(PPING)
                        [ ${P} -lt 2 ] && let N+=1 || break
                done
                logger -t "ncm-fix[$$]" -p notice "New ping had ${P}0% of success"
        fi
        CRONTAB

}


stop() {
        BOOTNCM stop
}

boot() {
        sleep 10
        start
}
